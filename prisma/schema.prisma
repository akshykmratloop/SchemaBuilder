generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  isSuperUser Boolean   @default(false)
  schemas     Schema[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ElementType {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  category    String    
  icon        String    
  properties  Json      // Change this line to Json
  elements    Element[] 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Section {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  elements    Element[]
  schema      Schema    @relation(fields: [schemaId], references: [id])
  schemaId    Int
  order       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Element {
  id            Int         @id @default(autoincrement())
  label         String
  elementType   ElementType @relation(fields: [elementTypeId], references: [id])
  elementTypeId Int
  section       Section     @relation(fields: [sectionId], references: [id])
  sectionId     Int
  properties    String?     
  order         Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Schema {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  sections    Section[]
  createdBy   User      @relation(fields: [userId], references: [id])
  userId      Int
  contents    Content[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Content {
  id        Int      @id @default(autoincrement())
  data      String   
  schema    Schema   @relation(fields: [schemaId], references: [id])
  schemaId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}